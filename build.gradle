plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'checkstyle'
    id 'com.github.spotbugs' version '4.5.0'
}

group = 'de.siegmar'
version = '1.1.3'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.apache.commons:commons-lang3:3.4')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.6.5')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.5')
    implementation('org.slf4j:slf4j-api:1.7.21')
    testImplementation('ch.qos.logback:logback-classic:1.1.7')
    testImplementation('commons-io:commons-io:2.5')
    testImplementation('org.testng:testng:6.9.10')
}

processResources {
    expand(project.properties)
}

task integrationTest(type: Test, dependsOn: "test") {
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}

tasks.matching {task -> task.name.startsWith('spotbugs')}.forEach {
    it.reports {
        html.enabled = true
        xml.enabled = false
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "logback-gelf"
            from components.java

            pom {
                name = 'Billomat4J'
                description = 'Java Software Development Kit for the Billomat API.'
                url = 'https://github.com/osiegmar/billomat4j'
                licenses {
                    license {
                        name = 'GNU Lesser General Public License version 3.0'
                        url = 'http://www.gnu.org/licenses/lgpl-3.0.txt'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/osiegmar/billomat4j.git'
                    url = 'https://github.com/osiegmar/billomat4j'
                }

                developers {
                    developer {
                        id = 'osiegmar'
                        name = 'Oliver Siegmar'
                        email = 'oliver@siegmar.de'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = 'ossrh'
            credentials(PasswordCredentials)
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
